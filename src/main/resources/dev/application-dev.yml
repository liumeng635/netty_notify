server:
  port: 8089
socket:
  server:
    port: 18089
    token-timeout: 86400
spring:
  kafka:
    producer:
      bootstrap-servers: 192.168.77.10:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      batch-size: 65536
      buffer-memory: 524288
    consumer:
        bootstrap-servers: 192.168.77.10:9092
        key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
        group-id: gpsDocking
  datasource:
    primary:
      url: jdbc:mysql://192.168.77.10:3306/ebus_customize?useUnicode=true&characterEncoding=utf-8&useSSL=false
#      url: jdbc:mysql://10.1.254.70:3306/ebus_customize?useUnicode=true&characterEncoding=utf-8&useSSL=false
#      url: jdbc:mysql://127.0.0.1:3306/ebus-test?useUnicode=true&characterEncoding=utf-8&useSSL=false
      username: root
      password: 123
#      username: liuwei
#      password: 123456
      driver-class-name: com.mysql.jdbc.Driver
      platform: mysql
      type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initialSize: 1
      minIdle: 3
      maxActive: 180
      # 配置获取连接等待超时的时间
      maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: select 'x'23
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  redis:
    host: 192.168.77.10
#    host: 10.1.254.172